{
  "api/Blackwood.Application.html": {
    "href": "api/Blackwood.Application.html",
    "title": "Class Application | Blackwood.IO",
    "keywords": "Class Application This is a utility class to provide some information about the application Inheritance Object Application Namespace : Blackwood Assembly : Blackwood.IO.dll Syntax public static class Application Properties | Improve this Doc View Source Name The application name. Declaration public static string Name { get; } Property Value Type Description String The application name."
  },
  "api/Blackwood.CacheItem-1.html": {
    "href": "api/Blackwood.CacheItem-1.html",
    "title": "Class CacheItem<t> | Blackwood.IO",
    "keywords": "Class CacheItem<t> An item in the doubly linked list. Inheritance Object CacheItem<t> Namespace : Blackwood Assembly : Blackwood.IO.dll Syntax public class CacheItem<t> Type Parameters Name Description t The type of item to cache. Fields | Improve this Doc View Source key The value to cache Declaration public readonly t key Field Value Type Description t The type of item to cache."
  },
  "api/Blackwood.EmbeddedResources.html": {
    "href": "api/Blackwood.EmbeddedResources.html",
    "title": "Class EmbeddedResources | Blackwood.IO",
    "keywords": "Class EmbeddedResources This is an interface to allow access to resources within a folder or archive Inheritance Object EmbeddedResources Implements IFolderWrapper IDisposable Namespace : Blackwood Assembly : Blackwood.IO.dll Syntax public class EmbeddedResources : IFolderWrapper, IDisposable Constructors | Improve this Doc View Source EmbeddedResources() Load resources from embedded in the assembly resources. Declaration public EmbeddedResources() | Improve this Doc View Source EmbeddedResources(Assembly) Load resources from embedded in the assembly resources. Declaration public EmbeddedResources(Assembly a) Parameters Type Name Description Assembly a The assembly read resources from Methods | Improve this Doc View Source Dispose() Performs any needed clean up Declaration public void Dispose() | Improve this Doc View Source Exists(String) Determines whether the specified file exists. Declaration public bool Exists(string relativePath) Parameters Type Name Description String relativePath The name of file embedded in the assembly Returns Type Description Boolean true if the file exists embedded in the assembly, false otherwise | Improve this Doc View Source Stream(String) This creates a stream for the given resources embedded in the assembly Declaration public Stream Stream(string relativePath) Parameters Type Name Description String relativePath The name of file embedded in the assembly Returns Type Description Stream null on error, otherwise a stream that can be used to access the file data Implements IFolderWrapper System.IDisposable"
  },
  "api/Blackwood.FolderWrapper.html": {
    "href": "api/Blackwood.FolderWrapper.html",
    "title": "Class FolderWrapper | Blackwood.IO",
    "keywords": "Class FolderWrapper This is a class to allow access to resources within a folder. It is a sibling to ZipWrapper that can access resources within a zip file Inheritance Object FolderWrapper Implements IFolderWrapper IDisposable Namespace : Blackwood Assembly : Blackwood.IO.dll Syntax public class FolderWrapper : IFolderWrapper, IDisposable Constructors | Improve this Doc View Source FolderWrapper(String) Creates an object that can access resources within a folder Declaration public FolderWrapper(string basePath) Parameters Type Name Description String basePath The basepath to the folder Methods | Improve this Doc View Source Dispose() Dispose of any internal resources Declaration public void Dispose() | Improve this Doc View Source Dispose(Boolean) Dispose of the binary stream Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description Boolean disposing | Improve this Doc View Source Exists(String) Determines whether the specified file exists. Declaration public bool Exists(string relativePath) Parameters Type Name Description String relativePath The name of file within the wrapper Returns Type Description Boolean true if the file exists within the wrapper, false otherwise | Improve this Doc View Source Stream(String) This creates a stream for the given resources within the folder Declaration public Stream Stream(string relativePath) Parameters Type Name Description String relativePath The name of file within the wrapper Returns Type Description Stream A stream that can be used to access the file Implements IFolderWrapper System.IDisposable"
  },
  "api/Blackwood.FS.html": {
    "href": "api/Blackwood.FS.html",
    "title": "Class FS | Blackwood.IO",
    "keywords": "Class FS This class provides a variety of utilities such as the path's to key points, and process path strings. Inheritance Object FS Namespace : Blackwood Assembly : Blackwood.IO.dll Syntax public static class FS Fields | Improve this Doc View Source ExeFilePath The path to the executable. Declaration public static string ExeFilePath Field Value Type Description String The path to the executable. Properties | Improve this Doc View Source AppDataPath The path to the application's data. Declaration public static string AppDataPath { get; } Property Value Type Description String The path to the application's data. | Improve this Doc View Source AssemblyDirectory The path of the executing assembly. Declaration public static string AssemblyDirectory { get; } Property Value Type Description String The path of the executing assembly. Remarks https://stackoverflow.com/questions/52797/how-do-i-get-the-path-of-the-assembly-the-code-is-in | Improve this Doc View Source CommonApplicationDataPath The path to the application's data. Declaration public static string CommonApplicationDataPath { get; } Property Value Type Description String The path to the application's data. Methods | Improve this Doc View Source BuildNameToRelativePathXref(String, String) A helper to go from partial file name to the full file name Declaration public static Dictionary<string, string> BuildNameToRelativePathXref(string path, string extension = \"json\") Parameters Type Name Description String path The path to search within String extension The file name extension (defualt is json) Returns Type Description Dictionary < String , String > The dictionary mapping the partial file names to the path | Improve this Doc View Source RemoveBasePath(String, String) This is use to remove the base path from the full path Declaration public static string RemoveBasePath(string basePath, string path) Parameters Type Name Description String basePath The path that should be removed String path The path that is to be modified Returns Type Description String The resulting path"
  },
  "api/Blackwood.html": {
    "href": "api/Blackwood.html",
    "title": "| Blackwood.IO",
    "keywords": "Classes Application This is a utility class to provide some information about the application CacheItem<t> An item in the doubly linked list. EmbeddedResources This is an interface to allow access to resources within a folder or archive FolderWrapper This is a class to allow access to resources within a folder. It is a sibling to ZipWrapper that can access resources within a zip file FS This class provides a variety of utilities such as the path's to key points, and process path strings. MRUCache<kt, vt> An associative Most-Recently-Used cache. The least recently used items are subject to being ejected. Text This class holds a variety of helper utilities to modify text. Util This is a helper class to provide a variety of utility procedures. ZipWrapper This is a class to allow access to resources within an archive. It is a sibling to FolderWrapper that can access resources within a folder Interfaces IFolderWrapper This is an interface to allow access to resources within a folder or archive Delegates Util.dWriteBackground This delegate will be called in the background to allow saving a file without causing the UI to experience an slowdown or stutter."
  },
  "api/Blackwood.IFolderWrapper.html": {
    "href": "api/Blackwood.IFolderWrapper.html",
    "title": "Interface IFolderWrapper | Blackwood.IO",
    "keywords": "Interface IFolderWrapper This is an interface to allow access to resources within a folder or archive Inherited Members IDisposable.Dispose() Namespace : Blackwood Assembly : Blackwood.IO.dll Syntax public interface IFolderWrapper : IDisposable Methods | Improve this Doc View Source Exists(String) Determines whether the specified file exists. Declaration bool Exists(string relativePath) Parameters Type Name Description String relativePath The name of file within the wrapper Returns Type Description Boolean true if the file exists within the wrapper, false otherwise | Improve this Doc View Source Stream(String) This creates a stream for the given resources within the container Declaration Stream Stream(string relativePath) Parameters Type Name Description String relativePath The name of file within the container Returns Type Description Stream A stream that can be used to access the file data"
  },
  "api/Blackwood.MRUCache-2.html": {
    "href": "api/Blackwood.MRUCache-2.html",
    "title": "Class MRUCache<kt, vt> | Blackwood.IO",
    "keywords": "Class MRUCache<kt, vt> An associative Most-Recently-Used cache. The least recently used items are subject to being ejected. Inheritance Object MRUCache<kt, vt> Namespace : Blackwood Assembly : Blackwood.IO.dll Syntax public class MRUCache<kt, vt> Type Parameters Name Description kt The type of the key vt The type of the item to cache Remarks A ring buffer is used track the oldest item for eviction. If the dictionary is allowed to grow too big, it becomes a botle neck Constructors | Improve this Doc View Source MRUCache(Int32) Constructs the cache Declaration public MRUCache(int maxItems = 1024) Parameters Type Name Description Int32 maxItems The maximum number of items to hold in the queue Fields | Improve this Doc View Source head The most recently used item. Declaration protected volatile CacheItem<kt> head Field Value Type Description CacheItem <kt> The cache-item, specialized for type of the key, to hold the recently used item. Properties | Improve this Doc View Source Item[kt] This is used to fetch the cached items Declaration public vt this[kt key] { get; set; } Parameters Type Name Description kt key The key used to associate with the item. Property Value Type Description vt The associated value Methods | Improve this Doc View Source Enumerate() Allow iteration over all of the items in the cache Declaration public IEnumerable<CacheItem<kt>> Enumerate() Returns Type Description IEnumerable < CacheItem <kt>> Each of the cache slots.. the slot is returned to allow managing the list"
  },
  "api/Blackwood.Text.html": {
    "href": "api/Blackwood.Text.html",
    "title": "Class Text | Blackwood.IO",
    "keywords": "Class Text This class holds a variety of helper utilities to modify text. Inheritance Object Text Namespace : Blackwood Assembly : Blackwood.IO.dll Syntax public static class Text Methods | Improve this Doc View Source ReadAllLines(Stream) Load all of the text lines from the stream Declaration public static string ReadAllLines(Stream stream) Parameters Type Name Description Stream stream The text stream Returns Type Description String The text of the file | Improve this Doc View Source SubstituteVars(String, IDictionary<String, Object>) Substitute in the variable references with the values that are in the tableau. Declaration public static string SubstituteVars(string sourceText, IDictionary<string, object> tableau) Parameters Type Name Description String sourceText The original text string IDictionary < String , Object > tableau The table of values for variables Returns Type Description String The potentially modified string Remarks This is not particularly effecient but it isn't intended to be used in an environment like that"
  },
  "api/Blackwood.Util.dWriteBackground.html": {
    "href": "api/Blackwood.Util.dWriteBackground.html",
    "title": "Delegate Util.dWriteBackground | Blackwood.IO",
    "keywords": "Delegate Util.dWriteBackground This delegate will be called in the background to allow saving a file without causing the UI to experience an slowdown or stutter. Namespace : Blackwood Assembly : Blackwood.IO.dll Syntax public delegate void dWriteBackground(FileStream stream); Parameters Type Name Description FileStream stream The file that was created in the background."
  },
  "api/Blackwood.Util.html": {
    "href": "api/Blackwood.Util.html",
    "title": "Class Util | Blackwood.IO",
    "keywords": "Class Util This is a helper class to provide a variety of utility procedures. Inheritance Object Util Namespace : Blackwood Assembly : Blackwood.IO.dll Syntax public static class Util Methods | Improve this Doc View Source RunCommand(String, String, String) This is used to run the program or verb-based commands in the background. Declaration public static IAsyncEnumerable<string> RunCommand(string toRun = null, string verb = null, string arguments = null) Parameters Type Name Description String toRun String verb String arguments The command line arguments Returns Type Description IAsyncEnumerable < String > An enumeration of teh text lines that the process emitted | Improve this Doc View Source Save(String, Util.dWriteBackground) Saves the file to the given path. This is done in the background by first writing to a temporary file, then moving to the target. Declaration public static void Save(string path, Util.dWriteBackground writeBackground) Parameters Type Name Description String path The path to store the data. Util.dWriteBackground writeBackground The callback to populate the data in the file. | Improve this Doc View Source Unzip(Byte[]) Decompresses the array Declaration public static byte[] Unzip(byte[] zippedBuffer) Parameters Type Name Description Byte [] zippedBuffer The buffer of compressed data Returns Type Description Byte [] The decompressed data | Improve this Doc View Source Zip(Byte[], Int32, Int32) Compresses the array Declaration public static byte[] Zip(byte[] array, int offset, int count) Parameters Type Name Description Byte [] array The array to compress Int32 offset The offset in the array to start Int32 count The number of bytes to compress Returns Type Description Byte [] The compressed bytes"
  },
  "api/Blackwood.ZipWrapper.html": {
    "href": "api/Blackwood.ZipWrapper.html",
    "title": "Class ZipWrapper | Blackwood.IO",
    "keywords": "Class ZipWrapper This is a class to allow access to resources within an archive. It is a sibling to FolderWrapper that can access resources within a folder Inheritance Object ZipWrapper Implements IFolderWrapper IDisposable Namespace : Blackwood Assembly : Blackwood.IO.dll Syntax public class ZipWrapper : IFolderWrapper, IDisposable Constructors | Improve this Doc View Source ZipWrapper(Stream) Creates an object that can access resources within an archive Declaration public ZipWrapper(Stream stream) Parameters Type Name Description Stream stream The stream to the archive file | Improve this Doc View Source ZipWrapper(String) Creates an object that can access resources within an archive Declaration public ZipWrapper(string path) Parameters Type Name Description String path The path to the archive file Methods | Improve this Doc View Source Dispose() Dispose of any internal resources Declaration public void Dispose() | Improve this Doc View Source Dispose(Boolean) Dispose of the archive Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description Boolean disposing true, right? | Improve this Doc View Source Exists(String) Determines whether the specified file exists. Declaration public bool Exists(string relativePath) Parameters Type Name Description String relativePath The name of file within the wrapper Returns Type Description Boolean true if the file exists within the wrapper, false otherwise | Improve this Doc View Source Retain() Increment the reference count for this object. Decrement the count using Dispose(). Declaration public void Retain() | Improve this Doc View Source Stream(String) This creates a stream for the given resources within the container Declaration public Stream Stream(string relativePath) Parameters Type Name Description String relativePath The name of file within the container Returns Type Description Stream null on error, otherwise a stream that can be used to access the file data Implements IFolderWrapper System.IDisposable"
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "API Documentation | Blackwood.IO",
    "keywords": "API Documentation This file summarizes the namespaces and classes in this assembly. Blackwood Namespace The Blackwood namespace is used to contain extra helper procedures and classes. Component Description Application A class to hold a Application name and path related utilities. CacheItem A class implementing a cache slot as part of the most-recently used cache. EmbeddedResources This is a class to allow access to resources within the resource area of an assembly. It is a sibling to ZipWrapper that can access resources within a zip file. FolderWrapper This is a class to allow access to resources within a folder. It is a sibling to ZipWrapper that can access resources within a zip file. FS A class to hold a file-system-related utilities. IFolderWrapper This is an interface to allow access to resources within a folder or archive. MRUCache A class implementing a most-recently used cache. Text A class to hold a text-related utilities. Util A class to hold a variety of helper utilities. ZipWrapper This is a class to allow access to resources within an archive. It is a sibling to FolderWrapper that can access resources within a folder."
  },
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "Add your introductions here! | Blackwood.IO",
    "keywords": "Add your introductions here!"
  },
  "contributing/code_of_conduct.html": {
    "href": "contributing/code_of_conduct.html",
    "title": "Contributor Covenant Code of Conduct | Blackwood.IO",
    "keywords": "Contributor Covenant Code of Conduct Our Pledge We as members, contributors, and leaders pledge to make participation in our community a harassment-free experience for everyone, regardless of age, body size, visible or invisible disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, religion, or sexual identity and orientation. We pledge to act and interact in ways that contribute to an open, welcoming, diverse, inclusive, and healthy community. Our Standards Examples of behavior that contributes to a positive environment for our community include: Demonstrating empathy and kindness toward other people Being respectful of differing opinions, viewpoints, and experiences Giving and gracefully accepting constructive feedback Accepting responsibility and apologizing to those affected by our mistakes, and learning from the experience Focusing on what is best not just for us as individuals, but for the overall community Examples of unacceptable behavior include: The use of sexualized language or imagery, and sexual attention or advances of any kind Trolling, insulting or derogatory comments, and personal or political attacks Public or private harassment Publishing others' private information, such as a physical or email address, without their explicit permission Other conduct which could reasonably be considered inappropriate in a professional setting Enforcement Responsibilities Community leaders are responsible for clarifying and enforcing our standards of acceptable behavior and will take appropriate and fair corrective action in response to any behavior that they deem inappropriate, threatening, offensive, or harmful. Community leaders have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, and will communicate reasons for moderation decisions when appropriate. Scope This Code of Conduct applies within all community spaces, and also applies when an individual is officially representing the community in public spaces. Examples of representing our community include using an official e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Enforcement Instances of abusive, harassing, or otherwise unacceptable behavior may be reported to the community leaders responsible for enforcement at [INSERT CONTACT METHOD]. All complaints will be reviewed and investigated promptly and fairly. All community leaders are obligated to respect the privacy and security of the reporter of any incident. Enforcement Guidelines Community leaders will follow these Community Impact Guidelines in determining the consequences for any action they deem in violation of this Code of Conduct: 1. Correction Community Impact : Use of inappropriate language or other behavior deemed unprofessional or unwelcome in the community. Consequence : A private, written warning from community leaders, providing clarity around the nature of the violation and an explanation of why the behavior was inappropriate. A public apology may be requested. 2. Warning Community Impact : A violation through a single incident or series of actions. Consequence : A warning with consequences for continued behavior. No interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, for a specified period of time. This includes avoiding interactions in community spaces as well as external channels like social media. Violating these terms may lead to a temporary or permanent ban. 3. Temporary Ban Community Impact : A serious violation of community standards, including sustained inappropriate behavior. Consequence : A temporary ban from any sort of interaction or public communication with the community for a specified period of time. No public or private interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, is allowed during this period. Violating these terms may lead to a permanent ban. 4. Permanent Ban Community Impact : Demonstrating a pattern of violation of community standards, including sustained inappropriate behavior, harassment of an individual, or aggression toward or disparagement of classes of individuals. Consequence : A permanent ban from any sort of public interaction within the community. Attribution This Code of Conduct is adapted from the Contributor Covenant , version 2.0, available at https://www.contributor-covenant.org/version/2/0/code_of_conduct.html . Community Impact Guidelines were inspired by Mozilla's code of conduct enforcement ladder . For answers to common questions about this code of conduct, see the FAQ at https://www.contributor-covenant.org/faq . Translations are available at https://www.contributor-covenant.org/translations ."
  },
  "contributing/CONTRIBUTING.html": {
    "href": "contributing/CONTRIBUTING.html",
    "title": "Contributing | Blackwood.IO",
    "keywords": "Contributing Thanks for being interested in contributing! We're so glad you want to help! We want contributing to be fun, enjoyable, and educational for all. We love receiving contributions from our community, all contributions are welcome. There are many ways to contribute. You can also help us by: Answering questions people have have in the forums Helping us build and design our website Cleaning up our existing documentation, polishing it, fixing our spelling or grammar mistakes, and so on Create new documentation Create an example of some changes / fixes/ hacks Creating blog posts, and tutorials about one of Vector's many features Reviewing submissions Contributing bits that can be incorporated into this or related projects. Below you will find tips on how to get the most out of your contributing experience, including GitHub management tips, setup instructions for docs and code contributions, and more. Not sure how to start contributing? If you are worried or don't know where to start, you can reach out with questions to anyone from the Project Victor team on Official Anki developer forums Anki robots Discord chat [ GitHub Discussions ][9] is directly integrated with the repository. You can use this to ask for help or share ideas related to improving the documentation or deploying it. How to start contributing and our code of conduct Below you'll find guides on our community, code of conduct, and how to get started contributing: Code of Conduct : Read about what we expect from everyone participating to make it the most friendly and welcoming community. Style Guide : The art of contributing, a.k.a. the detailed requirements that will make it more likely your contribution is accepted with minimal changes. By participating in this project, you agree to abide by our Code of Conduct . We expect all contributors to follow the Code of Conduct and to treat fellow humans with respect. Important Resources The important documents and links are on the front page of the wiki. Improving Documentation If you have a suggestion for the documentation, we ask that you take a stab at making the changes to the documentation. Simple changes can often be made without a sophisticated pull release. For large fixes, please build and test the documentation before submitting the pull-request to be sure you haven't accidentally introduced any layout or formatting issues. Whitespace Cleanup Don't mix code or documentation changes with whitespace cleanup! If you are fixing whitespace, include those changes separately from your code changes. If your request is unreadable due to whitespace changes, it will be rejected. Please submit whitespace cleanups in a separate pull request. Reorganizing Filesystem / directory tree Don't mix rearranging the location and names of files with code or documentation changes! If you are rearranging the file system, please include those changes separately from your code changes. Please submit file system changes in a separate pull request. Pull Request Process Please see the pull requests page for the process of submitting your changes to the prooject and incorporating feedback. are happy with your changes first! [9]: https://github.com/digital-dream-labs/api/discussions ) Credits: This page was adapted from an EmbeddedArtistry template"
  },
  "contributing/how-to-file-an-issue.html": {
    "href": "contributing/how-to-file-an-issue.html",
    "title": "Issues and Bug Tracking | Blackwood.IO",
    "keywords": "Issues and Bug Tracking How to File an Issue The GitHub issue tracker is the preferred channel for bug reports, documentation, feature requests and submitting pull requests . To resolve your issue, please select the appropriate category: Bug Reports Documentation Feature Requests For bug reports, include in your issue: The OS version you are running the software on The language (C#, javascript, go, etc) that you are targeting A reproduction for debugging and taking action Please do not use the issue tracker for personal support requests. The discourse and forums are the better places to request help. Labelling the issues Issue labels are a tool in GitHub that are used to group issues into one or more categories. Labeling issues helps by identifying: good issues for new contributors to work on reported and confirmed bugs feature requests duplicate issues issues that are stalled or blocked the status of an open issue the topic or subject matter of the issue When an issue is created -- and later examined -- this is a good time to check that its label is sensible, and to add an other labels that are helpful -- and to remove labels that do not apply. You can see a list of this project's labels (and their descriptions) . Tracking and Helping with Issues If an issue is affecting you, start at the top of this list and complete as many tasks on the list as you can: If there is an issue and you can add more detail, write a comment describing how the problem is affecting you, OR if you can, write up a work-around or improvement for the issue If there is not an issue, write the most complete description of what's happening Offer to help fix the issue (and it is totally expected that you ask for help; open-source maintainers want to help contributors) Deliver a well-crafted, tested PR Credits: this was adapted from the Gatsbj.js project"
  },
  "contributing/pull-requests.html": {
    "href": "contributing/pull-requests.html",
    "title": "Pull Requests | Blackwood.IO",
    "keywords": "Pull Requests This document describes what you needed to know about the pull request process. A pull request is how you submit your changes to the project. Before you make any changes, please read the contributing page for information regarding contributions to project overall. This will help you in making your changes fit within the project and its style; as well as the steps you must do before creating a pull-request. What is a Pull Request (PR)? As described above, a pull request is how you submit changes to this project. It is a request that the project pull in your changes. Here's how the folks at GitHub define a pull request : Pull requests let you tell others about changes you've pushed to a branch in a repository on GitHub. Once a pull request is opened, you can discuss and review the potential changes with collaborators and add follow-up commits before your changes are merged into the base branch. The pull request allows others to review the changes, test them, and provide feedback -- including requests to makes to the changees, so that they better fit into the project. Pull Request Process Once you have completed the changes on your local development environment, tested them, and so fprth, the next steps is to create a pull request. Be sure to check the contributing guide for additional steps and tips to ensure that your changes will fit with the project. When you are ready to generate a pull request, either for preliminary review, or for consideration of merging into the project you must first push your local topic branch back up to GitHub: git push origin newfeature Once you've committed and pushed all of your changes to GitHub, go to the page for your fork on GitHub, select your development branch, and click the pull request button. If you need to make any adjustments to your pull request, just push the updates to your branch. Your pull request will automatically track the changes on your development branch and update. Ensure any install or build dependencies are removed before the end of the layer when doing a build. You may merge the Pull Request in once you have the sign-off of two other developers, or if you do not have permission to do that, you may request the second reviewer to merge it for you. Review Process After a pull request has been sent to the repository, the team and community may suggest modifications to the changes you have submitted. Many pull requests are likely to open for several days, until the core team can approve them in Github. In some cases, multiple people will have the chance to review/comment. Please check your pull request for comments, feedback, and suggested changes: Review the suggested changes using the \"View changes\" button. Commit the suggestions. Discuss suggestions to ask questions about the suggested changes. Incoprorate the suggestions to your changes Addressing Feedback Once a PR has been submitted, your changes will be reviewed and constructive feedback may be provided. Feedback isn't meant as an attack, but to help make sure the highest-quality workmanship makes it into our project. Changes will be approved once required feedback has been addressed. If a maintainer asks you to \"rebase\" your PR, they're saying that a lot of files has changed, and that you need to update your fork so it's easier to merge. To update your forked repository, follow these steps: # Fetch upstream master and merge with your repo's master branch git fetch upstream git checkout master git merge upstream/master # If there were any new commits, rebase your development branch git checkout newfeature git rebase master If too much code has changed for git to automatically apply your branches changes to the new master, you will need to manually resolve the merge conflicts yourself. Once your new branch has no conflicts and works correctly, you can override your old branch using this command: git push -f Note that this will overwrite the old branch on the server, so make sure you are happy with your changes first! Additional resources Creating a pull request from GitHub Configuring a remote for a fork Which remote URL should I use? Git Branching and Merging Feature Branching and Workflows Resolving merge conflicts Credits: This page was adapted from an EmbeddedArtistry template and adapted from the Gatsbj.js project"
  },
  "contributing/style-guide.html": {
    "href": "contributing/style-guide.html",
    "title": "Style Guide | Blackwood.IO",
    "keywords": "Style Guide The .proto files should follow Google's protobuf style guidelines. Documentation style Markdown files The title of the document should use a # (in Markdown). Only a single title ( # ) should be used. The heading levels should start with ## (in Markdown) and grow in order Links ought to be relative instead of absolute when linking to documents. That is to say, the should not include the full domain. For example /documents/some-reference/ instead of https://randym32.github.io/Anki.Vector.Documentation/some-reference/"
  },
  "index.html": {
    "href": "index.html",
    "title": "Blackwood.IO Assembly | Blackwood.IO",
    "keywords": "Blackwood.IO Assembly This assembly is collection of utilitites commonly needed across many projects. They have been gathered into one place. This is not intended to have Windows Forms (or Windows) specific material. Getting Started Download Microsoft development tools If you working on Windows, download Visual Studio 2019 Community Edition to get started. This version is free for personal use. Download Visual Studio 2019 Community Edition To get started on Mac and Linux, you can download .NET Core 3.0. Download .NET Core 3.0 Download Github Nuget Documentation The documentation can be found at https://randym32.github.io/Blackwood.IO Browser configuration notes The documentation, when browsed from a local filesystem, may require tweaking the browser. Firefox Go to about:config and make change to the following: security.fileuri.strict_origin_policy set to false privacy.file_unique_origin set to false Chrome You can not use Chrome with a local file system. You can, however, use an extension like \"Web Server for Chrome\" Contributing View the Blackwood.IO GitHub Project for information on contributing."
  }
}